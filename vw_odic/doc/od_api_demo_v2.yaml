basePath: /api/v2
definitions:
  ArrayOfRelatedEntries:
    description: A list of written or spoken words
    items:
      additionalProperties: false
      properties:
        domains:
          $ref: '#/definitions/domainsList'
          description: A subject, discipline, or branch of knowledge particular to the Sense
        id:
          description: The identifier of the word
          type: string
        language:
          description: IANA language code specifying the language of the word
          type: string
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the pronunciation occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
          type: string
        text:
          type: string
      required:
        - text
        - id
      type: object
    minItems: 1
    type: array
  BilingualEntry:
    additionalProperties: false
    minProperties: 1
    properties:
      crossReferenceMarkers:
        $ref: '#/definitions/arrayofstrings'
        description: A grouping of crossreference notes.
      crossReferences:
        $ref: '#/definitions/CrossReferencesList'
      etymologies:
        $ref: '#/definitions/arrayofstrings'
        description: The origin of the word and the way in which its meaning has changed throughout history
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      homographNumber:
        description: Identifies the homograph grouping. The last two digits identify different entries of the same homograph. The first one/two digits identify the homograph number.
        type: string
      inflections:
        description: A list of inflected forms for an Entry.
        items:
          $ref: '#/definitions/InflectedForm'
        minItems: 1
        type: array
      notes:
        $ref: '#/definitions/CategorizedTextList'
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      senses:
        description: Complete list of senses for bilingual entries
        items:
          $ref: '#/definitions/BilingualSense'
        minItems: 1
        type: array
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    type: object
  BilingualExamplesList:
    description: A list of written or spoken rendering of examples of use of a word or text
    items:
      additionalProperties: false
      properties:
        collocations:
          $ref: '#/definitions/CrossReferencesList'
          description: Words or terms that co-occur
        crossReferenceMarkers:
          $ref: '#/definitions/arrayofstrings'
          description: A grouping of crossreference notes.
        crossReferences:
          $ref: '#/definitions/CrossReferencesList'
        definitions:
          $ref: '#/definitions/arrayofstrings'
          description: A list of statements of the exact meaning of a word
        domains:
          $ref: '#/definitions/domainsList'
          description: A subject, discipline, or branch of knowledge particular to the Sense
        notes:
          $ref: '#/definitions/CategorizedTextList'
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the pronunciation occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
        senseIds:
          $ref: '#/definitions/arrayofstrings'
          description: The list of sense identifiers related to the example. Provided in the sentences endpoint only.
        text:
          type: string
        translations:
          $ref: '#/definitions/TranslationsList'
      required:
        - text
      type: object
    minItems: 1
    type: array
  BilingualHeadwordEntry:
    additionalProperties: false
    description: Group of lexicalEntries related to a specific result for a given word ID.
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses containing translations in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/BilingualLexicalEntry'
        minItems: 1
        type: array
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      type:
        description: The json object type. Could be 'headword', 'inflection' or 'phrase'
        type: string
      word:
        description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
        type: string
    required:
      - id
      - language
      - lexicalEntries
      - word
    type: object
  BilingualLexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech
    properties:
      compounds:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      derivativeOf:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which this one derives
      derivatives:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      entries:
        items:
          $ref: '#/definitions/BilingualEntry'
        minItems: 1
        type: array
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
      notes:
        $ref: '#/definitions/CategorizedTextList'
      phrasalVerbs:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      phrases:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      root:
        description: Abstract root form from which this lexicalEntry is derived.
        type: string
      text:
        description: A given written or spoken realisation of an entry.
        type: string
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    required:
      - language
      - lexicalCategory
      - text
    type: object
  BilingualSense:
    additionalProperties: false
    description: A lexical sense represents the lexical meaning of a lexical entry when interpreted as referring to the corresponding ontology element
    minProperties: 1
    properties:
      antonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: antonym of word
      constructions:
        description: A construction provides information about typical syntax used of this sense. Each construction may optionally have one or more examples. Constructions may be translated if there is an equivalent in the target language.
        items:
          additionalProperties: false
          properties:
            domains:
              $ref: '#/definitions/domainsList'
            examples:
              items:
                $ref: '#/definitions/ExampleText'
              minItems: 1
              type: array
            notes:
              $ref: '#/definitions/CategorizedTextList'
            regions:
              $ref: '#/definitions/regionsList'
            registers:
              $ref: '#/definitions/registersList'
            text:
              description: The construction text
              type: string
            translations:
              $ref: '#/definitions/TranslationsList'
          required:
            - text
          type: object
        minItems: 1
        type: array
      crossReferenceMarkers:
        $ref: '#/definitions/arrayofstrings'
        description: A grouping of crossreference notes.
      crossReferences:
        $ref: '#/definitions/CrossReferencesList'
      datasetCrossLinks:
        description: List of links to entries in other datasets
        items:
          $ref: '#/definitions/DatasetCrossLink'
        minItems: 1
        type: array
      definitions:
        $ref: '#/definitions/arrayofstrings'
        description: A list of statements of the exact meaning of a word
      domainClasses:
        $ref: '#/definitions/domainClassesList'
        description: Domain classes particular to the Sense
      domains:
        $ref: '#/definitions/domainsList'
        description: A subject, discipline, or branch of knowledge particular to the Sense
      etymologies:
        $ref: '#/definitions/arrayofstrings'
        description: The origin of the word and the way in which its meaning has changed throughout history
      examples:
        $ref: '#/definitions/BilingualExamplesList'
      id:
        description: The id of the sense that is required for the delete procedure
        type: string
      inflections:
        description: A list of inflected forms for a sense.
        items:
          $ref: '#/definitions/InflectedForm'
        minItems: 1
        type: array
      notes:
        $ref: '#/definitions/CategorizedTextList'
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      regions:
        $ref: '#/definitions/regionsList'
        description: A particular area in which the Sense occurs, e.g. 'Great Britain'
      registers:
        $ref: '#/definitions/registersList'
        description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
      semanticClasses:
        $ref: '#/definitions/semanticClassesList'
        description: Semantic classes particular to the Sense
      shortDefinitions:
        $ref: '#/definitions/arrayofstrings'
        description: A list of short statements of the exact meaning of a word
      subsenses:
        description: Ordered list of subsenses of a sense
        items:
          $ref: '#/definitions/BilingualSense'
        minItems: 1
        type: array
      synonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: synonym of word
      thesaurusLinks:
        description: Ordered list of links to the Thesaurus Dictionary
        items:
          $ref: '#/definitions/thesaurusLink'
        minItems: 1
        type: array
      translations:
        $ref: '#/definitions/TranslationsList'
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'duck' and 'duck boat'
    type: object
  CategorizedTextList:
    description: various types of notes that appear
    items:
      additionalProperties: false
      properties:
        id:
          description: The identifier of the word
          type: string
        text:
          description: A note text
          type: string
        type:
          description: The descriptive category of the text
          type: string
      required:
        - text
        - type
      type: object
    minItems: 1
    type: array
  CrossReferencesList:
    description: A reference to another word that is closely related, might provide additional information about the subject, has a variant spelling or is an abbreviated form of it.
    items:
      additionalProperties: false
      description: cross references of a sense
      properties:
        id:
          description: The word id of the co-occurrence
          type: string
        text:
          description: The word of the co-occurrence
          type: string
        type:
          description: The type of relation between the two words. Possible values are 'close match', 'related', 'see also', 'variant spelling', and 'abbreviation' in case of crossreferences, or 'pre', 'post' in case of collocates.
          type: string
      required:
        - id
        - text
        - type
      type: object
    minItems: 1
    type: array
  DatasetCrossLink:
    allOf:
      - $ref: '#/definitions/SenseLink'
    description: Link to a specific sense of an entry in another dictionary
    properties:
      language:
        description: language of the dictionary where the linked sense can be found
        type: string
    required:
      - entry_id
      - sense_id
      - language
    type: object
  Entry:
    additionalProperties: false
    minProperties: 1
    properties:
      crossReferenceMarkers:
        $ref: '#/definitions/arrayofstrings'
        description: A grouping of crossreference notes.
      crossReferences:
        $ref: '#/definitions/CrossReferencesList'
      etymologies:
        $ref: '#/definitions/arrayofstrings'
        description: The origin of the word and the way in which its meaning has changed throughout history
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      homographNumber:
        description: Identifies the homograph grouping. The last two digits identify different entries of the same homograph. The first one/two digits identify the homograph number.
        type: string
      inflections:
        description: A list of inflected forms for an Entry.
        items:
          $ref: '#/definitions/InflectedForm'
        minItems: 1
        type: array
      notes:
        $ref: '#/definitions/CategorizedTextList'
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      senses:
        description: Complete list of senses
        items:
          $ref: '#/definitions/Sense'
        minItems: 1
        type: array
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    type: object
  ErrorSchema:
    description: Schema for Errors.
    properties:
      error:
        description: A human-readable explanation of the problem occurrence.
        type: string
    required:
      - error
    type: object
  ExampleText:
    description: An array of text with examples.
    items:
      allOf:
        - type: string
    type: array
  ExamplesList:
    description: A list of written or spoken rendering of examples of use of a word or text
    items:
      additionalProperties: false
      properties:
        definitions:
          $ref: '#/definitions/arrayofstrings'
          description: A list of statements of the exact meaning of a word
        domains:
          $ref: '#/definitions/domainsList'
          description: A subject, discipline, or branch of knowledge particular to the Sense
        notes:
          $ref: '#/definitions/CategorizedTextList'
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the pronunciation occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
        senseIds:
          $ref: '#/definitions/arrayofstrings'
          description: The list of sense identifiers related to the example. Provided in the sentences endpoint only.
        text:
          type: string
      required:
        - text
      type: object
    minItems: 1
    type: array
  Filters:
    description: Schema for the Filters endpoint.
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        additionalProperties: false
        description: A mapping of filters available per endpoints.
        minProperties: 1
        properties:
          entries:
            $ref: '#/definitions/arrayofstrings'
            description: A list of filters available for Retrieve Entry endpoint
          lemmas:
            $ref: '#/definitions/arrayofstrings'
            description: A list of filters available for Lemmatron endpoint
          sentences:
            $ref: '#/definitions/arrayofstrings'
            description: A list of filters available for Sentences endpoint
          thesaurus:
            $ref: '#/definitions/arrayofstrings'
            description: A list of filters available for Thesaurus endpoint
          translations:
            $ref: '#/definitions/arrayofstrings'
            description: A list of filters available for Translations endpoint
        type: object
  GrammaticalFeaturesList:
    description: The different forms are correlated with meanings or functions which we text as 'features'
    items:
      additionalProperties: false
      properties:
        id:
          type: string
        text:
          type: string
        type:
          type: string
      required:
        - text
        - type
        - id
      type: object
    minItems: 1
    type: array
  HeadwordEntry:
    additionalProperties: false
    description: Group of lexicalEntries related to a specific result for a given word ID.
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/lexicalEntry'
        minItems: 1
        type: array
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      type:
        description: The json object type. Could be 'headword', 'inflection' or 'phrase'
        type: string
      word:
        description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
        type: string
    required:
      - id
      - language
      - lexicalEntries
      - word
    type: object
  HeadwordInflection:
    additionalProperties: false
    description: Description of an inflected form of a word
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/InflectionLexicalEntry'
        minItems: 1
        type: array
      text:
        description: A given written or spoken realisation of an entry.
        type: string
    required:
      - id
      - language
      - lexicalEntries
    type: object
  HeadwordLemmatron:
    additionalProperties: false
    description: Description of an inflected form of a word
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/LemmatronLexicalEntry'
        minItems: 1
        type: array
      type:
        description: The json object type. Could be 'headword', 'inflection' or 'phrase'
        type: string
      word:
        description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
        type: string
    required:
      - id
      - language
      - lexicalEntries
      - word
    type: object
  HeadwordThesaurus:
    additionalProperties: false
    description: description of thesaurus information of a word
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/ThesaurusLexicalEntry'
        minItems: 1
        type: array
      type:
        description: The json object type. Could be 'headword', 'inflection' or 'phrase'
        type: string
      word:
        description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
        type: string
    required:
      - word
      - id
      - language
      - lexicalEntries
    type: object
  InflectedForm:
    additionalProperties: false
    description: Description of an Inflected form.
    properties:
      domains:
        $ref: '#/definitions/domainsList'
        description: A subject, discipline, or branch of knowledge particular to the Inflection
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      inflectedForm:
        description: Canonical form of an inflection
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      regions:
        $ref: '#/definitions/regionsList'
        description: A particular area in which the Inflection occurs, e.g. 'Great Britain'
      registers:
        $ref: '#/definitions/registersList'
        description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
    required:
      - inflectedForm
    type: object
  InflectionLexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech and grammatical features
    properties:
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      inflections:
        description: A list of inflected forms for a lexicalEntry.
        items:
          $ref: '#/definitions/InflectedForm'
        minItems: 1
        type: array
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
    required:
      - language
      - lexicalCategory
    type: object
  Inflections:
    description: Schema for the inflections endpoint.
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of headwords matching a given word
        items:
          $ref: '#/definitions/HeadwordInflection'
        minItems: 1
        type: array
    type: object
  InflectionsList:
    description: A grouping of the modifications of a word to express different grammatical categories
    items:
      additionalProperties: false
      properties:
        id:
          description: The identifier of the word
          type: string
        text:
          type: string
      required:
        - text
        - id
      type: object
    minItems: 1
    type: array
  Languages:
    description: Schema for the languages endpoint.
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of languages available.
        items:
          additionalProperties: false
          minProperties: 1
          properties:
            region:
              description: Name of region.
              type: string
            source:
              description: Name of source dictionary.
              type: string
            sourceLanguage:
              description: Source language of the results
              properties:
                id:
                  description: IANA language code
                  type: string
                language:
                  description: Language label.
                  type: string
              type: object
            targetLanguage:
              description: Translation language of the results
              properties:
                id:
                  description: IANA language code
                  type: string
                language:
                  description: Language label.
                  type: string
              type: object
            type:
              description: whether monolingual or bilingual.
              enum:
                - monolingual
                - bilingual
                - other
              type: string
          type: object
        minItems: 1
        type: array
    type: object
  Lemmatron:
    description: Schema for the Lemmas endpoint.
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of inflections matching a given word
        items:
          $ref: '#/definitions/HeadwordLemmatron'
        minItems: 1
        type: array
    type: object
  LemmatronLexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech and grammatical features
    properties:
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      inflectionOf:
        $ref: '#/definitions/InflectionsList'
        description: The canonical form of words for which the entry is an inflection
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
      text:
        description: A given written or spoken realisation of an entry.
        type: string
    required:
      - inflectionOf
      - language
      - lexicalCategory
      - text
    type: object
  PronunciationsList:
    description: A list of possible pronunciations of a word
    items:
      additionalProperties: false
      description: A grouping of pronunciation information
      minProperties: 1
      properties:
        audioFile:
          description: The URL of the sound file
          type: string
        dialects:
          $ref: '#/definitions/arrayofstrings'
          description: A local or regional variation where the pronunciation occurs, e.g. 'British English'
        phoneticNotation:
          description: The alphabetic system used to display the phonetic spelling
          type: string
        phoneticSpelling:
          description: Phonetic spelling is the representation of vocal sounds which express pronunciations of words. It is a system of spelling in which each letter represents invariably the same spoken sound
          type: string
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the pronunciation occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
      type: object
    minItems: 1
    type: array
  RetrieveEntry:
    description: Schema for the 'entries' endpoints
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of entries and all the data related to them
        items:
          $ref: '#/definitions/HeadwordEntry'
        minItems: 1
        type: array
    type: object
  RetrieveTranslations:
    description: Schema for the 'translations' endpoints
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of bilingual entries and all the data related to them
        items:
          $ref: '#/definitions/BilingualHeadwordEntry'
        minItems: 1
        type: array
    type: object
  Sense:
    additionalProperties: false
    description: A lexical sense represents the lexical meaning of a lexical entry when interpreted as referring to the corresponding ontology element
    minProperties: 1
    properties:
      antonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: antonym of word
      constructions:
        description: A construction provides information about typical syntax used of this sense. Each construction may optionally have one or more examples.
        items:
          additionalProperties: false
          properties:
            domains:
              $ref: '#/definitions/domainsList'
            examples:
              items:
                $ref: '#/definitions/ExampleText'
              minItems: 1
              type: array
            notes:
              $ref: '#/definitions/CategorizedTextList'
            regions:
              $ref: '#/definitions/regionsList'
            registers:
              $ref: '#/definitions/registersList'
            text:
              description: The construction text
              type: string
          required:
            - text
          type: object
        minItems: 1
        type: array
      crossReferenceMarkers:
        $ref: '#/definitions/arrayofstrings'
        description: A grouping of crossreference notes.
      crossReferences:
        $ref: '#/definitions/CrossReferencesList'
      definitions:
        $ref: '#/definitions/arrayofstrings'
        description: A list of statements of the exact meaning of a word
      domainClasses:
        $ref: '#/definitions/domainClassesList'
        description: Domain classes particular to the Sense
      domains:
        $ref: '#/definitions/domainsList'
        description: A subject, discipline, or branch of knowledge particular to the Sense
      etymologies:
        $ref: '#/definitions/arrayofstrings'
        description: The origin of the word and the way in which its meaning has changed throughout history
      examples:
        $ref: '#/definitions/ExamplesList'
      id:
        description: The id of the sense that is required for the delete procedure
        type: string
      inflections:
        description: A list of inflected forms for a sense.
        items:
          $ref: '#/definitions/InflectedForm'
        minItems: 1
        type: array
      notes:
        $ref: '#/definitions/CategorizedTextList'
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      regions:
        $ref: '#/definitions/regionsList'
        description: A particular area in which the Sense occurs, e.g. 'Great Britain'
      registers:
        $ref: '#/definitions/registersList'
        description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
      semanticClasses:
        $ref: '#/definitions/semanticClassesList'
        description: Semantic classes particular to the Sense
      shortDefinitions:
        $ref: '#/definitions/arrayofstrings'
        description: A list of short statements of the exact meaning of a word
      subsenses:
        description: Ordered list of subsenses of a sense
        items:
          $ref: '#/definitions/Sense'
        minItems: 1
        type: array
      synonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: synonym of word
      thesaurusLinks:
        description: Ordered list of links to the Thesaurus Dictionary
        items:
          $ref: '#/definitions/thesaurusLink'
        minItems: 1
        type: array
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'duck' and 'duck boat'
    type: object
  SenseLink:
    description: Link to a sense
    properties:
      entry_id:
        description: identifier of a word
        type: string
      sense_id:
        description: identifier of a sense
        type: string
    required:
      - entry_id
      - sense_id
    type: object
  SentencesEntry:
    additionalProperties: false
    description: Group of lexicalEntries related to a specific result in the Sentences endpoint for a given word ID.
    properties:
      id:
        description: The identifier of a word
        type: string
      language:
        description: IANA language code
        type: string
      lexicalEntries:
        description: A grouping of various senses in a specific language, and a lexical category that relates to a word
        items:
          $ref: '#/definitions/SentencesLexicalEntry'
        minItems: 1
        type: array
      type:
        description: The json object type. Could be 'headword', 'inflection' or 'phrase'
        type: string
      word:
        description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
        type: string
    required:
      - id
      - language
      - lexicalEntries
      - word
    type: object
  SentencesLexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech
    properties:
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
      sentences:
        $ref: '#/definitions/ExamplesList'
        description: A list of monolingual examples of use sentences
      text:
        description: A given written or spoken realisation of an entry.
        type: string
    required:
      - language
      - sentences
      - text
    type: object
  SentencesResults:
    description: Schema for the 'sentences' endpoint
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of entries and all the data related to them
        items:
          $ref: '#/definitions/SentencesEntry'
        minItems: 1
        type: array
    type: object
  SynonymsAntonyms:
    items:
      additionalProperties: false
      properties:
        domains:
          $ref: '#/definitions/domainsList'
        id:
          type: string
        language:
          type: string
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the Sense occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
        text:
          type: string
      required:
        - text
      type: object
    minItems: 1
    type: array
  Thesaurus:
    description: Schema for thesaurus endpoint
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        description: A list of found synonyms or antonyms
        items:
          $ref: '#/definitions/HeadwordThesaurus'
        minItems: 1
        type: array
    type: object
  ThesaurusEntry:
    additionalProperties: false
    minProperties: 1
    properties:
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      homographNumber:
        description: Identifies the homograph grouping. The last two digits identify different entries of the same homograph. The first one/two digits identify the homograph number.
        type: string
      senses:
        description: Complete list of senses
        items:
          $ref: '#/definitions/ThesaurusSense'
        minItems: 1
        type: array
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    type: object
  ThesaurusLexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech
    properties:
      entries:
        items:
          $ref: '#/definitions/ThesaurusEntry'
        minItems: 1
        type: array
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
      text:
        description: A given written or spoken realisation of an entry.
        type: string
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    required:
      - language
      - lexicalCategory
      - text
    type: object
  ThesaurusSense:
    additionalProperties: false
    description: A lexical sense represents the lexical meaning of a lexical entry when interpreted as referring to the corresponding ontology element
    minProperties: 1
    properties:
      antonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: antonym of word
      domainClasses:
        $ref: '#/definitions/domainClassesList'
        description: Domain classes particular to the Sense
      domains:
        $ref: '#/definitions/domainsList'
        description: A subject, discipline, or branch of knowledge particular to the Sense
      examples:
        $ref: '#/definitions/ExamplesList'
      id:
        description: The id of the sense that is required for the delete procedure
        type: string
      regions:
        $ref: '#/definitions/regionsList'
        description: A particular area in which the Sense occurs, e.g. 'Great Britain'
      registers:
        $ref: '#/definitions/registersList'
        description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
      semanticClasses:
        $ref: '#/definitions/semanticClassesList'
        description: Semantic classes particular to the Sense
      subsenses:
        description: subsenses of word
        items:
          $ref: '#/definitions/ThesaurusSense'
        minItems: 1
        type: array
      synonyms:
        $ref: '#/definitions/SynonymsAntonyms'
        description: synonym of word
    type: object
  ToneGroup:
    additionalProperties: false
    description: One or more encodings of a distinct tonal variation for a lexical item or its translation
    properties:
      tones:
        items:
          additionalProperties: false
          properties:
            type:
              enum:
                - ipa
                - dictionarySpecific
                - oupToneCode
              type: string
            value:
              type: string
          required:
            - type
            - value
          type: object
        minItems: 1
        type: array
    required:
      - tones
    type: object
  TranslationsList:
    description: A list of written or spoken rendering of the meaning of a word or text in another language(s)
    items:
      additionalProperties: false
      properties:
        collocations:
          $ref: '#/definitions/CrossReferencesList'
          description: Words or terms that co-occur
        domains:
          $ref: '#/definitions/domainsList'
          description: A subject, discipline, or branch of knowledge particular to the translation
        grammaticalFeatures:
          $ref: '#/definitions/GrammaticalFeaturesList'
        language:
          description: IANA language code specifying the language of the translation
          type: string
        notes:
          $ref: '#/definitions/CategorizedTextList'
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the translation occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
        text:
          type: string
        toneGroups:
          items:
            $ref: '#/definitions/ToneGroup'
          minItems: 1
          type: array
        type:
          type: string
      required:
        - text
        - language
      type: object
    minItems: 1
    type: array
  UtilityLabels:
    description: Schema for lexicalcategories, registers utility endpoints.
    properties:
      metadata:
        description: Additional Information provided by OUP
        type: object
      results:
        additionalProperties:
          description: the list of labels for an object. Every object can be a lexical category, or a register, or a domain.
          properties:
            en:
              description: Label in English
              type: string
          type: object
        description: Mapping of labels available.
        type: object
  VariantFormsList:
    description: Various words that are used interchangeably depending on the context, e.g 'aluminium' and 'aluminum'
    items:
      additionalProperties: false
      properties:
        domains:
          $ref: '#/definitions/domainsList'
          description: A subject, discipline, or branch of knowledge particular to the Sense
        notes:
          $ref: '#/definitions/CategorizedTextList'
        pronunciations:
          $ref: '#/definitions/PronunciationsList'
          description: A grouping of pronunciation information
        regions:
          $ref: '#/definitions/regionsList'
          description: A particular area in which the variant form occurs, e.g. 'Great Britain'
        registers:
          $ref: '#/definitions/registersList'
          description: A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
          type: string
        text:
          type: string
      required:
        - text
      type: object
    minItems: 1
    type: array
  Wordlist:
    description: Schema for wordlist endpoint.
    properties:
      metadata:
        description: Additional Information provided by OUP
        properties:
          total:
            description: Approximate number of results that match the given query.
            type: string
        type: object
      results:
        description: A list of found words
        items:
          additionalProperties: true
          description: Description of found word
          properties:
            id:
              description: The identifier of a word
              type: string
            matchString:
              type: string
            matchType:
              type: string
            region:
              description: Name of region.
              type: string
            word:
              description: (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
              type: string
          required:
            - id
            - word
          type: object
        minItems: 0
        type: array
    type: object
  arrayofstrings:
    items:
      type: string
    type: array
  controlledVocabularyList:
    items:
      additionalProperties: false
      properties:
        id:
          type: string
        text:
          type: string
      required:
        - id
        - text
      type: object
    type: array
  domainClassesList:
    allOf:
      - $ref: '#/definitions/controlledVocabularyList'
  domainsList:
    allOf:
      - $ref: '#/definitions/controlledVocabularyList'
  lexicalCategory:
    additionalProperties: false
    properties:
      id:
        type: string
      text:
        type: string
    required:
      - id
      - text
    type: object
  lexicalEntry:
    additionalProperties: false
    description: Description of an entry for a particular part of speech
    properties:
      compounds:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      derivativeOf:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which this one derives
      derivatives:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      entries:
        items:
          $ref: '#/definitions/Entry'
        minItems: 1
        type: array
      grammaticalFeatures:
        $ref: '#/definitions/GrammaticalFeaturesList'
      language:
        description: IANA language code
        type: string
      lexicalCategory:
        $ref: '#/definitions/lexicalCategory'
        description: A linguistic category of words (or more precisely lexical items), generally defined by the syntactic or morphological behaviour of the lexical item in question, such as noun or verb
      notes:
        $ref: '#/definitions/CategorizedTextList'
      phrasalVerbs:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      phrases:
        $ref: '#/definitions/ArrayOfRelatedEntries'
        description: Other words from which their Sense derives
      pronunciations:
        $ref: '#/definitions/PronunciationsList'
      root:
        description: Abstract root form from which this lexicalEntry is derived.
        type: string
      text:
        description: A given written or spoken realisation of an entry.
        type: string
      variantForms:
        $ref: '#/definitions/VariantFormsList'
        description: Various words that are used interchangeably depending on the context, e.g 'a' and 'an'
    required:
      - language
      - lexicalCategory
      - text
    type: object
  regionsList:
    allOf:
      - $ref: '#/definitions/controlledVocabularyList'
  registersList:
    allOf:
      - $ref: '#/definitions/controlledVocabularyList'
  semanticClassesList:
    allOf:
      - $ref: '#/definitions/controlledVocabularyList'
  thesaurusLink:
    allOf:
      - $ref: '#/definitions/SenseLink'
    description: Link to a specific sense of an entry in the thesaurus Dictionary
host: od-api.oxforddictionaries.com
info:
  description: ''
  title: ''
  version: 2.5.1
parameters:
  appId:
    default: c2e7b1fe
    description: App ID Authentication Parameter
    in: header
    name: app_id
    required: true
    type: string
    x-data-threescale-name: app_ids
  appKey:
    default: b41be5b3b08f91ebe3d849570f15c52a
    description: App Key Authentication Parameter
    in: header
    name: app_key
    required: true
    type: string
    x-data-threescale-name: app_keys
  domainsParam:
    description: |
      Selection filter: a comma-separated list of domains ids to match on (default: all domains).
      The available domains for a given language (or language pair) can be obtained from the /domains/ endpoint.

      The filter keeps all the senses and subsenses in the response whose domains "id" matches the values in the domains parameter.

      ```@javascript
      {
        "domains": [
          {
            "id": "jazz",
            "text": "Jazz"

          }]
      }
      ```
    in: query
    name: domains
    required: false
    type: string
  fieldsParam:
    allowEmptyValue: false
    description: |
      A comma-separated list of data fields to return for the matched entries.
      Valid field names are 'definitions', 'domains', 'etymologies', 'examples', 'pronunciations', 'regions', 'registers' and 'variantForms'.
      (a) If not specified, all available fields for each word_id are returned.
      (b) If specified and empty, the minimum payload for each word_id is returned.
      (c) If more field names are specified, then the minimum payload plus the specified fields for each word_id are returned.
    in: query
    items:
      enum:
        - definitions
        - domains
        - etymologies
        - examples
        - pronunciations
        - regions
        - registers
        - variantForms
      type: string
    name: fields
    required: false
    type: array
  grammaticalFeaturesParam:
    description: |
      Selection filter: a comma-separated list of grammatical features ids to match on (default: all features).
      The available grammatical features for a given language (or language pair) can be obtained from the /grammaticalfeatures/ endpoint.

      The filter keeps all the entries in the response whose grammaticalFeatures "id" matches the values in the grammaticalFeatures parameter.
      ```@javascript
      {
        "grammaticalFeatures": [
                                {
                                    "id": "mass",
                                    "text": "Mass",
                                    "type": "Countability"
                                }
                            ]
      }
      ```
    in: query
    name: grammaticalFeatures
    required: false
    type: string
  lexicalCategoryParam:
    description: |
      Selection filter: a comma-separated list of lexical categories ids to match on (default: all categories).
      The available lexical categories for a given language (or language pair) can be obtained from the /lexicalcategories/ endpoint.

      The filter keeps all the entries in the response whose lexicalCategory "id" matches the values in the lexicalCategory parameter.
      ```@javascript
      {
        "lexicalCategory": {
                        "id": "adjective",
                        "text": "Adjective"
                    }
      }
      ```
    in: query
    name: lexicalCategory
    required: false
    type: string
  registersParam:
    description: |
      Selection filter: a comma-separated list of registers ids to match on (default: all registers).
      The available registers for a given language (or language pair) can be obtained from the /registers/ endpoint.

      The filter keeps all the senses and subsenses in the response whose registers "id" matches the values in the registers parameter.

      ```@javascript
      {
        "registers": [
          {
            "id": "informal",
            "text": "Informal"

          }]
      }
      ```
    in: query
    name: registers
    required: false
    type: string
  sourceLangBilingualParam:
    description: Language code of the source language in a bilingual dataset.
    enum:
      - en
      - ar
      - de
      - el
      - es
      - ha
      - hi
      - id
      - it
      - mr
      - ms
      - nso
      - pt
      - qu
      - ru
      - te
      - tk
      - tn
      - tpi
      - tt
      - ur
      - xh
      - zh
      - zu
    in: path
    name: source_lang
    required: true
    type: string
  strictMatchParam:
    default: false
    description: Specifies whether diacritics must match exactly. If "false", near-homographs for the given word_id will also be selected (e.g., *rose* matches both *rose* and *rosé*; similarly *rosé* matches both).
    in: query
    name: strictMatch
    required: false
    type: boolean
  targetLangBilingualParam:
    description: Language code of the target language in a bilingual dataset.
    enum:
      - en
      - ar
      - de
      - el
      - es
      - fa
      - ha
      - hi
      - id
      - ig
      - it
      - ka
      - mr
      - ms
      - nso
      - pt
      - qu
      - ro
      - ru
      - tg
      - tk
      - tn
      - tpi
      - tt
      - xh
      - yo
      - zh
      - zu
    in: path
    name: target_lang
    required: true
    type: string
  thesaurusFieldsParam:
    allowEmptyValue: false
    description: |
      A comma-separated list of data fields to return for the matched entries.
      What to return - if specified, either 'synonyms', 'antonyms' or 'synonyms,antonyms'
      It cannot be empty.
    in: query
    items:
      enum:
        - synonyms
        - antonyms
      type: string
    name: fields
    required: false
    type: array
  translationsFieldsParam:
    allowEmptyValue: false
    description: |
      A comma-separated list of data fields to return for the matched entries.
      Valid field names are 'definitions', 'domains', 'etymologies', 'examples', 'pronunciations', 'regions', 'registers', 'variantForms', 'translations'.
      (a) If not specified, all available fields for each word_id are returned.
      (b) If specified and empty, the minimum payload for each word_id is returned.
      (c) If more field names are specified, then the minimum payload plus the specified fields for each word_id are returned.
    in: query
    items:
      enum:
        - definitions
        - domains
        - etymologies
        - examples
        - pronunciations
        - regions
        - registers
        - variantForms
        - translations
      type: string
    name: fields
    required: false
    type: array
paths:
  /domains/{source_lang_domains}/{target_lang_domains}:
    get:
      description: |
        Returns a list of the available [domains](documentation/glossary?term=domain) for a given bilingual language dataset.
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_domains
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_domains
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '400':
          $ref: '#/responses/TranslationsBadRequest'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available domains in a bilingual dataset
      tags:
        - Utility
  /domains/{source_lang}:
    get:
      description: |
        Returns a list of the available [domains](documentation/glossary?term=domain) for a given monolingual language dataset.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available domains in a monolingual dataset
      tags:
        - Utility
  /entries/{source_lang}/{word_id}:
    get:
      description: |

        Use this to retrieve definitions, [pronunciations](documentation/glossary?term=pronunciation), example sentences, [grammatical information](documentation/glossary?term=grammaticalfeatures) and [word origins](documentation/glossary?term=etymology).

        TIP: Entries ONLY works for dictionary headwords. You may need to use the Lemmas endpoint first to link an inflected form back to its headword (e.g., pixels --> pixel). Alternatively, you can use the Words endpoint, a feature that enables you to retrieve definitions, pronunciations, word origins, and grammatical data across headwords and inflected words with just one call to the API.

        Use filters to limit the [entry](documentation/glossary?term=entry) information that is returned. For example, you may only require definitions and not everything else, or just [pronunciations](documentation/glossary?term=pronunciation). The full list of filters can be retrieved from the filters Utility endpoint. You can also specify values within the filter using '='. For example 'grammaticalFeatures=singular'. Filters can also be combined.

        Combining different filters will build a query using 'AND' operators, while if a filter contains more than one value it will build a query using 'OR' operators. For example, a combination of filters like '?grammaticalFeatures=singular&lexicalCategory=noun,verb' will return entries which match the query ('noun' OR 'verb') AND 'singular'.

        <div id="dictionary_entries_filters"></div>
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/fieldsParam'
        - $ref: '#/parameters/grammaticalFeaturesParam'
        - $ref: '#/parameters/lexicalCategoryParam'
        - $ref: '#/parameters/domainsParam'
        - $ref: '#/parameters/registersParam'
        - $ref: '#/parameters/strictMatchParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/EntrySuccessfulResponse'
        '400':
          $ref: '#/responses/FiltersBadRequest'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieve dictionary information for a given word
      tags:
        - Entries
  /fields:
    get:
      description: |
        Returns a list of the available fields to construct API requests.
      parameters:
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/FiltersSuccessfulResponse'
      summary: Lists available fields
      tags:
        - Utility
  /fields/{endpoint}:
    get:
      description: |
        Returns the lists of fields available to construct API requests for a given endpoint.
      parameters:
        - description: Name of the endpoint
          enum:
            - entries
            - thesaurus
          in: path
          name: endpoint
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/FiltersSuccessfulResponse'
        '404':
          $ref: '#/responses/EndpointNotFound'
      summary: Lists available fields for specific endpoint
      tags:
        - Utility
  /filters:
    get:
      description: |
        Returns a list of all the valid filters to construct API requests.
      parameters:
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/FiltersSuccessfulResponse'
      summary: Lists available filters
      tags:
        - Utility
  /filters/{endpoint}:
    get:
      description: |
        Returns a list of all the valid filters by endpoint to construct API requests.
      parameters:
        - description: Name of the endpoint.
          enum:
            - entries
            - lemmas
          in: path
          name: endpoint
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/FiltersSuccessfulResponse'
        '404':
          $ref: '#/responses/EndpointNotFound'
      summary: Lists available filters for specific endpoint
      tags:
        - Utility
  /grammaticalFeatures/{source_lang_grammatical}/{target_lang_grammatical}:
    get:
      description: |
        Returns a list of the available [grammatical features](documentation/glossary?term=grammaticalfeatures) for a given bilingual dataset.
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_grammatical
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_grammatical
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '400':
          $ref: '#/responses/TranslationsBadRequest'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available grammatical features in a bilingual dataset
      tags:
        - Utility
  /grammaticalFeatures/{source_lang}:
    get:
      description: |
        Returns a list of the available [grammatical features](documentation/glossary?term=grammaticalfeatures) for a given monolingual dataset.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available grammatical features in a monolingual dataset
      tags:
        - Utility
  /inflections/{source_lang}/{word_id}:
    get:
      description: |
        Retrieve all the [inflections](documentation/glossary?term=inflection) of a given word_id. The inflections
        are given for a lexicalEntry with a specific lexicalCategory.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/strictMatchParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/Inflections'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieves the inflected forms of a given word.
      tags:
        - Inflections
  /languages:
    get:
      description: |
        Returns the names of monolingual and bilingual language datasets available in the API
      parameters:
        - description: Source Language. If provided, output will be filtered by sourceLanguage.
          in: query
          name: sourceLanguage
          required: false
          type: string
        - description: Target Language. If provided, output will be filtered by targetLanguage.
          in: query
          name: targetLanguage
          required: false
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/Languages'
        '400':
          $ref: '#/responses/TranslationsBadRequest'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Returns the names of Dictionaries in the API
      tags:
        - Utility
  /lemmas/{source_lang}/{word_id}:
    get:
      description: |

        Use this to check if a word exists in the dictionary, or what 'root' form it links to (e.g., swimming > swim). The response tells you the possible [lemmas](documentation/glossary?term=lemma) for a given [inflected](documentation/glossary?term=inflection) word. This can then be combined with other endpoints to retrieve more information.

        The results can be filtered by lexicalCategories and/or grammaticalFeatures. Filters can be combined.

        Combining different filters will build a query using 'AND' operators, while if a filter contains more than one value it will build a query using 'OR' operators. For example, a combination of filters like '?grammaticalFeatures=singular&lexicalCategory=noun,verb' will return entries which match the query ('noun' OR 'verb') AND 'singular'.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en
            - de
            - es
            - hi
            - it
            - lv
            - pt
            - ro
            - sw
            - ta
            - tn
          in: path
          name: source_lang
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/grammaticalFeaturesParam'
        - $ref: '#/parameters/lexicalCategoryParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/Lemmatron'
        '400':
          $ref: '#/responses/FiltersBadRequest'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Check a word exists in the dictionary and retrieve its root form
      tags:
        - Lemmas
  /lexicalCategories/{source_lang_lexical}/{target_lang_lexical}:
    get:
      description: |
        Returns a list of available [lexical categories](documentation/glossary?term=lexicalcategory) for a given bilingual dataset.
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_lexical
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_lexical
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available lexical categories in a bilingual dataset
      tags:
        - Utility
  /lexicalCategories/{source_lang}:
    get:
      description: |
        Returns a list of available [lexical categories](documentation/glossary?term=lexicalcategory) for a given language dataset.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available lexical categories in a monolingual dataset
      tags:
        - Utility
  /registers/{source_lang_registers}/{target_lang_registers}:
    get:
      description: |
        Returns a list of the available [registers](documentation/glossary?term=registers) for a given bilingual language dataset.
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_registers
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_registers
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '400':
          $ref: '#/responses/TranslationsBadRequest'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available registers in a bilingual dataset
      tags:
        - Utility
  /registers/{source_lang}:
    get:
      description: |
        Returns a list of the available [registers](documentation/glossary?term=registers) for a given monolingual language dataset.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/UtilitySuccessfulResponse'
        '404':
          $ref: '#/responses/LanguageNotFound'
      summary: Lists available registers in a  monolingual dataset
      tags:
        - Utility
  /search/thesaurus/{source_lang}:
    get:
      description: |

        Use this to retrieve possible [headword](documentation/glossary?term=headword) matches for a given string of text. The results are calculated using headword matching, fuzzy matching, and [lemmatization](documentation/glossary?term=lemma).

          <div id="search"></div>
      parameters:
        - description: Language code of the source language in a Thesaurus dataset.
          enum:
            - en
          in: path
          name: source_lang
          required: true
          type: string
        - description: Search string
          in: query
          name: q
          required: true
          type: string
        - description: Use prefix=true to return only results that start with the value of the "q" parameter.
          in: query
          name: prefix
          required: false
          type: boolean
        - description: Restricts number of returned results. Default and max. is 5000.
          in: query
          name: limit
          required: false
          type: integer
        - description: Pagination - results offset.  The sum of offset and limit must not exceed 10000.
          in: query
          name: offset
          required: false
          type: integer
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/SearchSuccessfulResponse'
        '400':
          $ref: '#/responses/SearchBadRequest'
        '404':
          $ref: '#/responses/SearchNotFound'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieves possible dictionary matches to an input string
      tags:
        - Search
  /search/translations/{source_lang_search}/{target_lang_search}:
    get:
      description: |

        Use this to find possible headwords with translations for a given word.

        <div id="search_translation"></div>
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_search
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_search
          required: true
          type: string
        - description: Search string
          in: query
          name: q
          required: true
          type: string
        - description: Use prefix=true to return only results that start with the value of the "q" parameter.
          in: query
          name: prefix
          required: false
          type: boolean
        - description: Restricts number of returned results. Default and max. is 5000.
          in: query
          name: limit
          required: false
          type: integer
        - description: pagination - results offset.  The sum of offset and limit must not exceed 10000.
          in: query
          name: offset
          required: false
          type: integer
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/SearchSuccessfulResponse'
        '400':
          $ref: '#/responses/SearchBadRequest'
        '404':
          $ref: '#/responses/SearchNotFound'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieves possible headwords with translations
      tags:
        - Search
  /search/{source_lang}:
    get:
      description: |

        Use this to retrieve possible [headword](documentation/glossary?term=headword) matches for a given string of text. The results are calculated using headword matching, fuzzy matching, and [lemmatization](documentation/glossary?term=lemma).

          <div id="search"></div>
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - description: Search string
          in: query
          name: q
          required: true
          type: string
        - description: Use prefix=true to return only results that start with the value of the "q" parameter.
          in: query
          name: prefix
          required: false
          type: boolean
        - description: Restricts number of returned results. Default and max. is 5000.
          in: query
          name: limit
          required: false
          type: integer
        - description: Pagination - results offset.  The sum of offset and limit must not exceed 10000.
          in: query
          name: offset
          required: false
          type: integer
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/SearchSuccessfulResponse'
        '400':
          $ref: '#/responses/SearchBadRequest'
        '404':
          $ref: '#/responses/SearchNotFound'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieves possible dictionary matches to an input string
      tags:
        - Search
  /sentences/{source_lang}/{word_id}:
    get:
      description: |

        Use this to retrieve sentences extracted from a corpus of real-world language, including news and blog content. This is available for English and Spanish. For English, the sentences are linked to the correct [sense](documentation/glossary?term=sense) of the word in the dictionary. In Spanish, they are linked at the [headword](documentation/glossary?term=headword) level.
          <div id="sentences"></div>
      parameters:
        - description: Language code of the source language.
          enum:
            - en
            - es
          in: path
          name: source_lang
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/strictMatchParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/SentencesResults'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieve real example sentences of a word in use
      tags:
        - Sentences
  /thesaurus/{source_lang}/{word_id}:
    get:
      description: |
        Use this to retrieve words that are similar/opposite in meaning to the input word ([synonym](documentation/glossary?term=synonym)/[antonym](documentation/glossary?term=antonym)).

        Tip: Some Entries responses contain sense-level links to a Thesaurus entry by the property "thesaurusLink". For instance:

        ```@javascript
          {
            "thesaurusLinks": [
                                    {
                                        "entry_id": "abide_by",
                                        "sense_id": "t_en_gb0000029.003"
                                    }
                                ]
          }

        ```
        <div id="synonyms"></div>
      parameters:
        - description: Language code of the source language in a Thesaurus dataset.
          enum:
            - en
          in: path
          name: source_lang
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/thesaurusFieldsParam'
        - $ref: '#/parameters/strictMatchParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/Thesaurus'
        '400':
          $ref: '#/responses/FiltersBadRequest'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieve words that are similar to a given word
      tags:
        - Thesaurus
  /translations/{source_lang_translate}/{target_lang_translate}/{word_id}:
    get:
      description: |

        Use this to return translations for a given word. In the event that a word in the dataset does not have a direct translation, the response will be a [definition](documentation/glossary?term=entry) in the target language.

          <div id="translation"></div>
      parameters:
        - description: Language code of the source language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - ha
            - hi
            - id
            - it
            - mr
            - ms
            - nso
            - pt
            - qu
            - ru
            - te
            - tk
            - tn
            - tpi
            - tt
            - ur
            - xh
            - zh
            - zu
          in: path
          name: source_lang_translate
          required: true
          type: string
        - description: Language code of the target language in a bilingual dataset.
          enum:
            - en
            - ar
            - de
            - el
            - es
            - fa
            - ha
            - hi
            - id
            - ig
            - it
            - ka
            - mr
            - ms
            - nso
            - pt
            - qu
            - ro
            - ru
            - tg
            - tk
            - tn
            - tpi
            - tt
            - xh
            - yo
            - zh
            - zu
          in: path
          name: target_lang_translate
          required: true
          type: string
        - default: ace
          description: The identifier for an Entry (case-sensitive).
          in: path
          name: word_id
          required: true
          type: string
        - $ref: '#/parameters/strictMatchParam'
        - $ref: '#/parameters/translationsFieldsParam'
        - $ref: '#/parameters/grammaticalFeaturesParam'
        - $ref: '#/parameters/lexicalCategoryParam'
        - $ref: '#/parameters/domainsParam'
        - $ref: '#/parameters/registersParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          description: Successful response.
          headers:
            X-Request-Id:
              description: |
                A unique ID generated for the request.
                When reporting a problem with a specific request, include the returned X-Request-Id.
              type: string
          schema:
            $ref: '#/definitions/RetrieveTranslations'
        '404':
          description: |
            no bilingual entry is found matching supplied source_lang and id
            and/or that entry has no senses with translations in the target language.
          schema:
            $ref: '#/definitions/ErrorSchema'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Retrieve translations for a given word
      tags:
        - Translations
  /words/{source_lang}:
    get:
      description: |

        Use this endpoint to retrieve definitions, examples and other information for a given dictionary word or an inflection (e.g., running > run). The response contains information about the lemmas to which the given word/inflected form is linked.

        The results can be filtered by lexicalCategories, domains, registers or grammaticalFeatures. Filters can be combined.

        In addition, users can use fields to project some of the properties.

        Combining different filters will build a query using 'AND' operators, while if a filter contains more than one value it will build a query using 'OR' operators. For example, a combination of filters like '?grammaticalFeatures=singular&lexicalCategory=noun,verb' will return entries which match the query ('noun' OR 'verb') AND 'singular'.
      parameters:
        - description: Language code of the source language in a monolingual dataset.
          enum:
            - en-gb
            - en-us
            - es
            - fr
            - gu
            - hi
            - lv
            - ro
            - sw
            - ta
          in: path
          name: source_lang
          required: true
          type: string
        - default: swimming
          description: The word or inflection to retrieve. This parameter is NOT case-sensitive.
          in: query
          name: q
          required: true
          type: string
        - $ref: '#/parameters/fieldsParam'
        - $ref: '#/parameters/grammaticalFeaturesParam'
        - $ref: '#/parameters/lexicalCategoryParam'
        - $ref: '#/parameters/domainsParam'
        - $ref: '#/parameters/registersParam'
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/appKey'
      responses:
        '200':
          $ref: '#/responses/EntrySuccessfulResponse'
        '400':
          $ref: '#/responses/FiltersBadRequest'
        '404':
          $ref: '#/responses/EntryNotFound'
        '414':
          $ref: '#/responses/UrlTooLong'
        '500':
          $ref: '#/responses/InternalServerError'
      summary: Check if an inflected form exists in the dictionary and retrieve the entries data of its root form.
      tags:
        - Words
responses:
  EndpointNotFound:
    description: |
      Unknown endpoint.
    schema:
      $ref: '#/definitions/ErrorSchema'
  EntryNotFound:
    description: |
      No entry was found matching the selection parameters; OR
      an invalid filter was specified.
    schema:
      $ref: '#/definitions/ErrorSchema'
  EntrySuccessfulResponse:
    description: Successful response.
    headers:
      X-Request-Id:
        description: |
          A unique ID generated for the request.
          When reporting a problem with a specific request, include the returned X-Request-Id.
        type: string
    schema:
      $ref: '#/definitions/RetrieveEntry'
  FiltersBadRequest:
    description: |
      Invalid value for filters such as lexicalCategory, registers, domains, etc.
      Invalid value for fields projections accepted. It is not possible to project a non-existing field.
    schema:
      $ref: '#/definitions/ErrorSchema'
  FiltersSuccessfulResponse:
    description: Successful response.
    headers:
      X-Request-Id:
        description: |
          A unique ID generated for the request.
          When reporting a problem with a specific request, include the returned X-Request-Id.
        type: string
    schema:
      $ref: '#/definitions/Filters'
  InternalServerError:
    description: Internal error. An error occurred during processing.
    schema:
      $ref: '#/definitions/ErrorSchema'
  LanguageNotFound:
    description: Unknown sourceLanguage and/or targetLanguage.
    schema:
      $ref: '#/definitions/ErrorSchema'
  SearchBadRequest:
    description: source_lang and target_lang can not be same; no words matching source_lang and/or translations; offset and limit exceeded 10000 together.
    schema:
      $ref: '#/definitions/ErrorSchema'
  SearchNotFound:
    description: |
      No entry was found matching the selection parameters.
    schema:
      $ref: '#/definitions/ErrorSchema'
  SearchSuccessfulResponse:
    description: Successful response. The Search endpoint is able to retrieve a max of 10000 results per query.
    headers:
      X-Request-Id:
        description: |
          A unique ID generated for the request.
          When reporting a problem with a specific request, include the returned X-Request-Id.
        type: string
    schema:
      $ref: '#/definitions/Wordlist'
  ServiceUnavailable:
    description: The query is taking too long. Try to reduce the number of results by adding options such as min/max frequency.
    schema:
      $ref: '#/definitions/ErrorSchema'
  TranslationsBadRequest:
    description: source_lang and target_lang can not be same.
    schema:
      $ref: '#/definitions/ErrorSchema'
  UrlTooLong:
    description: URL is too long.
    schema:
      $ref: '#/definitions/ErrorSchema'
  UtilitySuccessfulResponse:
    description: Successful response.
    headers:
      X-Request-Id:
        description: |
          A unique ID generated for the request.
          When reporting a problem with a specific request, include the returned X-Request-Id.
        type: string
    schema:
      $ref: '#/definitions/UtilityLabels'
schemes:
  - https
swagger: '2.0'
